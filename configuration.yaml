
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

http:
  use_x_forwarded_for: true
  trusted_proxies:
    - 127.0.0.1
    - 10.0.2.10
  cors_allowed_origins:
    - !secret home_assistant_url
  #ssl_certificate: /ssl/fullchain.pem
  #ssl_key: /ssl/privkey.pem
  #ssl_profile: intermediate

recorder:
  db_url: !secret db_location
  exclude:
    entities:
      - sensor.rockrobo_map
    entity_globs:
      - sensor.glances*
      - sensor.galaxynote10*
      - sensor.router_iot*
    domains:
      - mobile_app
  purge_keep_days: 30
  commit_interval: 5

# Text to speech
tts:
  - platform: google_translate

weather:
  - platform: openweathermap
    api_key: !secret openweathermap_apikey



browser_mod:
  devices:
    d82da74e_093bb3cc: 
      name: galaxytabs
    a0b8cb9f_03e5cf0b:
      name: galaxytaba
    0cf28301_70560337:
      name: galaxytabs6
    02b9eed9_b7405785:
      name: sdsapc
      
# var:
#   people_home:
#     initial_value: on
#     icon: mdi:home-account
#   bedtime_announced:
#     initial_value: off
#     icon: mdi:sleep

zwave:
  usb_path: /dev/serial/by-id/usb-Silicon_Labs_HubZ_Smart_Home_Controller_8130075A-if00-port0
  network_key: !secret zwave_network_key

spotify:
  client_id: !secret spotify_client_id
  client_secret: !secret spotify_client_secret

spotcast:
  sp_dc: !secret sp_dc
  sp_key: !secret sp_key

#ifttt:
  #key: !secret ifttt_api_key

discovery:

media_player:
  - platform: soundtouch
    host: 10.0.2.160
    port: 8090
    name: Soundtouch Dining
  - platform: soundtouch
    host: 10.0.2.161
    port: 8090
    name: Soundtouch Kitchen
  - platform: soundtouch
    host: 10.0.2.162
    port: 8090
    name: Soundtouch Living Room



ourgroceries:
  username: !secret our_groceries_username
  password: !secret our_groceries_password

google:
  client_id: !secret google_client_id
  client_secret: !secret google_client_secret

alexa:
  smart_home:
    endpoint: https://api.amazonalexa.com/v3/events
    client_id: !secret alexa_events_id
    client_secret: !secret alexa_events_secret
    filter:
      include_domains:
        - climate
        - media_player
        - scene
        - script
        - switch
        - vacuum
      include_entities:
        - light.master_bath_light
        - light.hallway_bath_light
        - light.laundry_light
    entity_config:
      media_player.dining:
        display_categories: SPEAKER
      media_player.living_room:
        display_categories: SPEAKER
      media_player.kitchen:
        display_categories: SPEAKER

vacuum:
  - platform: mqtt



mobile_app:

# badnest:
#   issue_token: !secret badnest_issue_token
#   cookie: !secret badnest_cookie
#   region: us
  
# climate:
#   - platform: badnest
#     scan_interval: 10

speedtestdotnet:
  scan_interval:
    minutes: 30
  monitored_conditions:
    - ping
    - download
    - upload

apcupsd:
  host: a722577e-apcupsd

ddwrt:
  devices:
    - name: router_iot
      host: 10.0.2.1
      username: !secret router_iot_username
      password: !secret router_iot_password
      ssl: true
      verify_ssl: false
      sensor:
        - clk_freq
        - cpu_temp
        - ip_connections
        - load_average1
        - load_average5
        - load_average15
        - uptime
        - voltage
        - wl_channel
        - wl_count
        - wl_quality
        - wl_rate
        - wl_xmit

zha_map:
  
switch:

  - platform: template
    switches:
      starlight: 
        unique_id: switch.starlight
        value_template: "{{ state_attr('switch.starlight_outlet', 'current_power_w') | float > 1 }}"
        turn_on:
          service: script.starlight_on
        turn_off:
          service: switch.turn_off
          data:
            entity_id: switch.starlight_outlet
      office_master:
        unique_id: switch.office_master
        value_template: "{{ state_attr('switch.office_peripherals', 'current_power_w') | float > 30 }}"
        turn_on:
          service: script.start_the_office
        turn_off:
          service: script.stop_the_office
      theater_master:
        unique_id: switch.theater_master
        value_template: "{{ state_attr('switch.theater_peripherals_watts', 'current_power_w') | float > 20 }}"
        turn_on:
          service: script.start_the_theater
        turn_off:
          service: script.stop_the_theater
      fan:
        unique_id: switch.fan
        value_template: "{{ state_attr('climate.hallway_thermostat', 'fan_mode') == 'On Low' }}"
        turn_on:
          service: climate.set_fan_mode
          data:
            fan_mode: On Low
            entity_id: climate.hallway_thermostat
        turn_off:
          service: climate.set_fan_mode
          data:
            fan_mode: Auto Low
            entity_id: climate.hallway_thermostat
      bedtime:
        unique_id: switch.bedtime
        value_template: "{{ is_state('automation.kitchen_motion_stop_after_bedtime', 'on') }}"
        turn_on:
          service: script.bedtime
        turn_off:
          service: script.good_morning
      away:
        unique_id: switch.away
        value_template: "{{ is_state('automation.kitchen_motion_start_lights', 'off') }}"
        turn_on:
          service: script.users_away
        turn_off:
          service: script.users_home
      cameras:
        unique_id: switch.cameras
        value_template: "{{ not is_state('camera.galaxy_tab_a_camera', 'idle') }}"
        turn_on:
          service: script.start_cameras
        turn_off:
          service: script.stop_cameras

camera:
  - platform: mjpeg
    mjpeg_url: http://10.0.2.121:2971/camera/stream
    name: Galaxy Tab S Camera
  - platform: mjpeg
    mjpeg_url: http://10.0.2.124:2971/camera/stream
    name: Galaxy Tab S6 Camera
  - platform: mjpeg
    mjpeg_url: http://10.0.2.122:2971/camera/stream
    name: Galaxy Tab A Camera

sensor:
#  - platform: badnest

  - platform: nws_alerts
    zone_id: !secret nws_zone

#   - platform: systemmonitor
#     resources:
#       - type: disk_use_percent
#         arg: /
#       - type: memory_use_percent
#       - type: processor_use
#       - type: throughput_network_in
#         arg: enp3s0
#       - type: throughput_network_out
#         arg: enp3s0

  - platform: openweathermap
    api_key: !secret openweathermap_apikey
    forecast: false
    monitored_conditions:
      - clouds
      - weather_code
      - wind_speed
      - humidity
      - rain
      - snow

  - platform: mqtt
    state_topic: "valetudo/rockrobo/state"
    json_attributes_topic: "valetudo/rockrobo/map_data_parsed"
    name: rockrobo_map
    value_template: 'OK'
    scan_interval: 5

  - platform: template
    sensors:
      # theater_peripherals_watts:
      #   friendly_name_template: "{{ states.switch.vesync_switch.theater_peripherals}} Current Consumption"
      #   value_template: '{{ states.switch.theater_peripherals.attributes["current_power_w"] | float }}'
      #   unit_of_measurement: 'W'
      # office_peripherals_watts:
      #   friendly_name_template: "{{ states.switch.vesync_switch.office_peripherals}} Current Consumption"
      #   value_template: '{{ states.switch.office_peripherals.attributes["current_power_w"] | float }}'
      #   unit_of_measurement: 'W'
      # living_room_monitor_watts:
      #   friendly_name_template: "{{ states.switch.vesync_switch.living_room_monitor}} Current Consumption"
      #   value_template: '{{ states.switch.living_room_monitor.attributes["current_power_w"] | float }}'
      #   unit_of_measurement: 'W'
      # spotify_source:
      #   friendly_name: "Spotify Source"
      #   value_template: "{{ state_attr('media_player.spotify', 'source') }}"
      hallway_humidity:
        friendly_name: "Hallway Thermostat Humidity"
        value_template: '{{ state_attr("climate.hallway_thermostat", "current_humidity") }}'
        unit_of_measurement: '%'
      ups_watts:
        friendly_name: "UPS Current Consumption"
        value_template: '{{ (states("sensor.ups_load") | float / 100 * 330) | round (2) }}'
        unit_of_measurement: 'W'
      router_iot_wl_quality_numeric:
        value_template: '{{ states(''sensor.router_iot_wl_quality'')[0:2] | int }}'
        unit_of_measurement: '%'

  - platform: mqtt
    state_topic: "wallpanel/galaxytaba/sensor/battery"
    name: "Galaxy Tab A Battery Level"
    unit_of_measurement: "%"
    value_template: '{{ value_json.value }}'

  - platform: mqtt
    state_topic: "wallpanel/galaxytabs/sensor/light"
    name: "Galaxy Tab S Light Level"
    unit_of_measurement: "lx"
    value_template: '{{ value_json.value }}'
  - platform: mqtt
    state_topic: "wallpanel/galaxytabs/sensor/magneticField"
    name: "Galaxy Tab S Magnetic Field"
    unit_of_measurement: "uT"
    value_template: '{{ value_json.value }}'
  - platform: mqtt
    state_topic: "wallpanel/galaxytabs/sensor/battery"
    name: "Galaxy Tab S Battery Level"
    unit_of_measurement: "%"
    value_template: '{{ value_json.value }}'

  - platform: mqtt
    state_topic: "wallpanel/galaxytabs6/sensor/light"
    name: "Galaxy Tab S6 Light Level"
    unit_of_measurement: "lx"
    value_template: '{{ value_json.value }}'
  - platform: mqtt
    state_topic: "wallpanel/galaxytabs6/sensor/battery"
    name: "Galaxy Tab S6 Battery Level"
    unit_of_measurement: "%"
    value_template: '{{ value_json.value }}'

  - platform: apcupsd
    resources:
      - linev
      - loadpct
      - bcharge
      - timeleft
      - mbattchg
      - mintimel
      - maxtime
      - maxlinev
      - minlinev
      - outputv

binary_sensor:
  - platform: mqtt
    state_topic: "wallpanel/galaxytabs/sensor/motion"
    name: "Galaxy Tab S Motion"
    payload_on: '{"value":true}'
    payload_off: '{"value":false}'
    device_class: motion 
  - platform: mqtt
    state_topic: "wallpanel/galaxytaba/sensor/motion"
    name: "Galaxy Tab A Motion"
    payload_on: '{"value":true}'
    payload_off: '{"value":false}'
    device_class: motion 
  - platform: mqtt
    state_topic: "wallpanel/galaxytabs6/sensor/motion"
    name: "Galaxy Tab S6 Motion"
    payload_on: '{"value":true}'
    payload_off: '{"value":false}'
    device_class: motion 



group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

frontend:
  themes: !include_dir_merge_named themes

panel_custom: !include panel_custom.yaml

